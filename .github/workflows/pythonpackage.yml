# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: gabrieltool-build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
    create:

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.8, 3.9]

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip setuptools
                  pip install -r requirements/base.txt
            - name: Lint with flake8
              run: |
                  pip install flake8
                  # lenient linting
                  # stop the build if there are Python syntax errors or undefined names
                  # flake8 ./gabrieltool --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  # flake8 ./gabrieltool --count --exit-zero --max-complexity=10
                  # --max-line-length=127 --statistics
                  # strict linting
                  flake8 .
            - name: Test with pytest
              run: |
                  pip install pytest
                  python -m pytest gabrieltool

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: "3.9"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip setuptools
                  pip install -r requirements/base.txt
                  pip install wheel twine
            - name: Build Package
              run: |
                  python setup.py sdist bdist_wheel
            - name: pypi-publish
              if: github.event_name == 'create' && github.event.ref_type == 'tag'
              uses: pypa/gh-action-pypi-publish@master
              with:
                  user: __token__
                  password: ${{ secrets.pypi_password }}
